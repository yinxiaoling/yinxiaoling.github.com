(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{198:function(t,a,e){"use strict";e.r(a);var s=e(0),i=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"docker-开源项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-开源项目","aria-hidden":"true"}},[t._v("#")]),t._v(" Docker 开源项目")]),t._v(" "),e("p",[t._v("本章介绍 Docker 开源的项目。随着 Docker 功能的越来越多，Docker 也加快了开源的步伐，Docker 未来会将引擎拆分为更多开放组件，对用于组装 Docker 产品的各种新型工具与组件进行开源并供技术社区使用。")]),t._v(" "),e("h2",{attrs:{id:"linuxkit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linuxkit","aria-hidden":"true"}},[t._v("#")]),t._v(" LinuxKit")]),t._v(" "),e("p",[e("code",[t._v("LinuxKit")]),t._v(" 这个工具可以将多个 Docker 镜像组成一个最小化、可自由定制的 Linux 系统，最后的生成的系统只有几十 M 大小，可以很方便的在云端进行部署。")]),t._v(" "),e("p",[t._v("下面我们在 macOS 上通过实例，来编译并运行一个全部由 Docker 镜像组成的包含 nginx 服务的 Linux 系统。")]),t._v(" "),e("h3",{attrs:{id:"安装-linuxkit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-linuxkit","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装 Linuxkit")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("brew tap linuxkit/linuxkit\n\nbrew "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --HEAD linuxkit\n")])])]),e("h3",{attrs:{id:"克隆源代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#克隆源代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 克隆源代码")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone -b master --depth"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1 https://github.com/linuxkit/linuxkit.git\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" linuxkit\n")])])]),e("h3",{attrs:{id:"编译-linux-系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译-linux-系统","aria-hidden":"true"}},[t._v("#")]),t._v(" 编译 Linux 系统")]),t._v(" "),e("p",[t._v("LinuxKit 通过 "),e("code",[t._v("yaml")]),t._v(" 文件配置。")]),t._v(" "),e("p",[t._v("我们来查看 "),e("code",[t._v("linuxkit.yml")]),t._v(" 文件，了解各个字段的作用。")]),t._v(" "),e("p",[e("code",[t._v("kernel")]),t._v(" 字段定义了内核版本。")]),t._v(" "),e("p",[e("code",[t._v("init")]),t._v(" 字段中配置系统启动时的初始化顺序。")]),t._v(" "),e("p",[e("code",[t._v("onboot")]),t._v(" 字段配置系统级的服务。")]),t._v(" "),e("p",[e("code",[t._v("services")]),t._v(" 字段配置镜像启动后运行的服务。")]),t._v(" "),e("p",[e("code",[t._v("files")]),t._v(" 字段配置制作镜像时打包入镜像中的文件。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("linuxkit build linuxkit.yml\n")])])]),e("h3",{attrs:{id:"启动-linux-系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-linux-系统","aria-hidden":"true"}},[t._v("#")]),t._v(" 启动 Linux 系统")]),t._v(" "),e("p",[t._v("编译成功后，接下来启动这个 Linux 系统。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("linuxkit run -publish 8080:80/tcp linuxkit\n")])])]),e("p",[t._v("接下来在浏览器中打开 "),e("code",[t._v("127.0.0.1:8080")]),t._v(" 即可看到 nginx 默认页面。")])])}],!1,null,null,null);i.options.__file="opensource.md";a.default=i.exports}}]);