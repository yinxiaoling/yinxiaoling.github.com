(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{174:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"docker-数据管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-数据管理","aria-hidden":"true"}},[t._v("#")]),t._v(" Docker 数据管理")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://yeasy.gitbooks.io/docker_practice/data_management/_images/types-of-mounts.png",alt:"img"}})]),t._v(" "),s("p",[t._v("这一章介绍如何在 Docker 内部以及容器之间管理数据，在容器中管理数据主要有两种方式：")]),t._v(" "),s("ul",[s("li",[t._v("数据卷（Volumes）")]),t._v(" "),s("li",[t._v("挂载主机目录 (Bind mounts)")])]),t._v(" "),s("h2",{attrs:{id:"数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据卷")]),t._v(" "),s("p",[s("code",[t._v("数据卷")]),t._v(" 是一个可供一个或多个容器使用的特殊目录，它绕过 UFS，可以提供很多有用的特性：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("数据卷")]),t._v(" 可以在容器之间共享和重用")]),t._v(" "),s("li",[t._v("对 "),s("code",[t._v("数据卷")]),t._v(" 的修改会立马生效")]),t._v(" "),s("li",[t._v("对 "),s("code",[t._v("数据卷")]),t._v(" 的更新，不会影响镜像")]),t._v(" "),s("li",[s("code",[t._v("数据卷")]),t._v(" 默认会一直存在，即使容器被删除")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意："),s("code",[t._v("数据卷")]),t._v(" 的使用，类似于 Linux 下对目录或文件进行 mount，镜像中的被指定为挂载点的目录中的文件会隐藏掉，能显示看的是挂载的 "),s("code",[t._v("数据卷")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"创建一个数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个数据卷","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建一个数据卷")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker volume create my-vol\n")])])]),s("p",[t._v("查看所有的 "),s("code",[t._v("数据卷")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker volume ls\n\nlocal               my-vol\n")])])]),s("p",[t._v("在主机里使用以下命令可以查看指定 "),s("code",[t._v("数据卷")]),t._v(" 的信息")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('docker volume inspect my-vol\n[\n    {\n        "Driver": "local",\n        "Labels": {},\n        "Mountpoint": "/var/lib/docker/volumes/my-vol/_data",\n        "Name": "my-vol",\n        "Options": {},\n        "Scope": "local"\n    }\n]\n')])])]),s("h3",{attrs:{id:"启动一个挂载数据卷的容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动一个挂载数据卷的容器","aria-hidden":"true"}},[t._v("#")]),t._v(" 启动一个挂载数据卷的容器")]),t._v(" "),s("p",[t._v("在用 "),s("code",[t._v("docker run")]),t._v(" 命令的时候，使用 "),s("code",[t._v("--mount")]),t._v(" 标记来将 "),s("code",[t._v("数据卷")]),t._v(" 挂载到容器里。在一次 "),s("code",[t._v("docker run")]),t._v(" 中可以挂载多个 "),s("code",[t._v("数据卷")]),t._v("。")]),t._v(" "),s("p",[t._v("下面创建一个名为 "),s("code",[t._v("web")]),t._v(" 的容器，并加载一个 "),s("code",[t._v("数据卷")]),t._v(" 到容器的 "),s("code",[t._v("/webapp")]),t._v(" 目录。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -d -P \\\n    --name web \\\n    # -v my-vol:/wepapp \\\n    --mount source=my-vol,target=/webapp \\\n    training/webapp \\\n    python app.py\n")])])]),s("h3",{attrs:{id:"查看数据卷的具体信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看数据卷的具体信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看数据卷的具体信息")]),t._v(" "),s("p",[t._v("在主机里使用以下命令可以查看 "),s("code",[t._v("web")]),t._v(" 容器的信息")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker inspect web\n")])])]),s("p",[s("code",[t._v("数据卷")]),t._v(' 信息在 "Mounts" Key 下面')]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Mounts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"volume"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-vol"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Source"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/docker/volumes/my-vol/_data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Destination"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Driver"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Mode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"RW"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Propagation"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("h3",{attrs:{id:"删除数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除数据卷","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除数据卷")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker volume rm my-vol\n")])])]),s("p",[s("code",[t._v("数据卷")]),t._v(" 是被设计用来持久化数据的，它的生命周期独立于容器，Docker 不会在容器被删除后自动删除 "),s("code",[t._v("数据卷")]),t._v("，并且也不存在垃圾回收这样的机制来处理没有任何容器引用的 "),s("code",[t._v("数据卷")]),t._v("。如果需要在删除容器的同时移除数据卷。可以在删除容器的时候使用 "),s("code",[t._v("docker rm -v")]),t._v(" 这个命令。")]),t._v(" "),s("p",[t._v("无主的数据卷可能会占据很多空间，要清理请使用以下命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker volume prune\n")])])]),s("h2",{attrs:{id:"挂载主机目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#挂载主机目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 挂载主机目录")]),t._v(" "),s("h3",{attrs:{id:"挂载一个主机目录作为数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#挂载一个主机目录作为数据卷","aria-hidden":"true"}},[t._v("#")]),t._v(" 挂载一个主机目录作为数据卷")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("--mount")]),t._v(" 标记可以指定挂载一个本地主机的目录到容器中去。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -d -P \\\n    --name web \\\n    # -v /src/webapp:/opt/webapp \\\n    --mount type=bind,source=/src/webapp,target=/opt/webapp \\\n    training/webapp \\\n    python app.py\n")])])]),s("p",[t._v("上面的命令加载主机的 "),s("code",[t._v("/src/webapp")]),t._v(" 目录到容器的 "),s("code",[t._v("/opt/webapp")]),t._v("目录。这个功能在进行测试的时候十分方便，比如用户可以放置一些程序到本地目录中，来查看容器是否正常工作。本地目录的路径必须是绝对路径，以前使用 "),s("code",[t._v("-v")]),t._v(" 参数时如果本地目录不存在 Docker 会自动为你创建一个文件夹，现在使用 "),s("code",[t._v("--mount")]),t._v(" 参数时如果本地目录不存在，Docker 会报错。")]),t._v(" "),s("p",[t._v("Docker 挂载主机目录的默认权限是 "),s("code",[t._v("读写")]),t._v("，用户也可以通过增加 "),s("code",[t._v("readonly")]),t._v(" 指定为 "),s("code",[t._v("只读")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -d -P \\\n    --name web \\\n    # -v /src/webapp:/opt/webapp:ro \\\n    --mount type=bind,source=/src/webapp,target=/opt/webapp,readonly \\\n    training/webapp \\\n    python app.py\n")])])]),s("p",[t._v("加了 "),s("code",[t._v("readonly")]),t._v(" 之后，就挂载为 "),s("code",[t._v("只读")]),t._v(" 了。如果你在容器内 "),s("code",[t._v("/opt/webapp")]),t._v(" 目录新建文件，会显示如下错误")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/opt/webapp # touch new.txt\ntouch: new.txt: Read-only file system\n")])])]),s("h3",{attrs:{id:"查看数据卷的具体信息-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看数据卷的具体信息-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看数据卷的具体信息")]),t._v(" "),s("p",[t._v("在主机里使用以下命令可以查看 "),s("code",[t._v("web")]),t._v(" 容器的信息")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker inspect web\n")])])]),s("p",[s("code",[t._v("挂载主机目录")]),t._v(' 的配置信息在 "Mounts" Key 下面')]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Mounts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bind"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Source"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/src/webapp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Destination"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/opt/webapp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Mode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"RW"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Propagation"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rprivate"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("h3",{attrs:{id:"挂载一个本地主机文件作为数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#挂载一个本地主机文件作为数据卷","aria-hidden":"true"}},[t._v("#")]),t._v(" 挂载一个本地主机文件作为数据卷")]),t._v(" "),s("p",[s("code",[t._v("--mount")]),t._v(" 标记也可以从主机挂载单个文件到容器中")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run --rm -it \\\n   # -v $HOME/.bash_history:/root/.bash_history \\\n   --mount type=bind,source=$HOME/.bash_history,target=/root/.bash_history \\\n   ubuntu:18.04 \\\n   bash\n\nroot@2affd44b4667:/# history\n1  ls\n2  diskutil list\n")])])]),s("p",[t._v("这样就可以记录在容器输入过的命令了。")])])}],!1,null,null,null);r.options.__file="DataManager.md";a.default=r.exports}}]);